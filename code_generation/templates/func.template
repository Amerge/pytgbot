{%- macro for_type(variable, full=False) -%}{% for type in variable.types %}{% if full %}{{ type.as_import.full }}{% else %}{{ type.string }}{% endif %}{% if not loop.last %}, {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro for_type_full(variable) -%}{% for type in variable.types %}{{ type.as_import.full }}{% if not loop.last %}, {% endif -%}{% endfor %}{%- endmacro -%}
{%- macro types_as_tuple(variable) -%}{% if variable.types|length > 1 %}({{ for_type(variable) }}){% else -%}{{ for_type(variable) }}{% endif -%}{%- endmacro -%}
{%- macro for_args()     -%}{%- for variable in function.variables %}{{ variable.name }}{% if variable.optional %}=None               {%- endif %}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}
{%- macro for_args_set() -%}{%- for variable in function.variables %}{{ variable.name }}{% if variable.optional %}={{ variable.name }}{%- endif %}{% if not loop.last %}, {% endif -%}{%- endfor %}{% endmacro %}

    def {{ function.func }}(self, {{ for_args() }}):
        """
        {% block func_docstring -%}
        {{ function.description|indent(8) }}

        {{function.link}}

        {% if function.parameters %}
        Parameters:
        {% for param in function.parameters %}
            :param {{ param.name }}: {{ param.description }}
            :type  {{ param.name }}: {{ for_type(param) }}
        {% endfor %}
        {% endif %}
        {% if function.keywords -%}
        Optional keyword parameters:
        {% for keyword in function.keywords %}
            :keyword {{ keyword.name }}: {{ keyword.description }}
            :type    {{ keyword.name }}: {{ for_type(keyword) }}
        {% endfor %}
        {% endif -%}

        Returns:

            :return: {{ function.returns.description }}
            :rtype:  {{ for_type_full(function.returns) }}
        {% endblock -%}
        """
        {% block imports_block -%}
        {%- for import in function.imports -%}
        from {{ import.path }} import {{ import.name }}
        {%- endfor %}
        {%- endblock %}

        {% for variable in function.variables -%}
        {% if variable.optional -%}
        assert({{ variable.name }} is None or isinstance({{ variable.name }}, {{ types_as_tuple(variable) }}))
        {%- else -%}
        assert({{ variable.name }} is not None)
        assert(isinstance({{ variable.name }}, {{ types_as_tuple(variable) }}))
        {%- endif %}
        {% if variable.always_is_value %}
        assert({{ variable.name }} == {{ variable.always_is_value }})
        {% endif -%}
        self.{{ variable.name }} = {{ variable.name }}
        {%- if not loop.last %}
        {% endif %}
        {#  -#}
        {%- endfor -%}
        {#  #}
        return self.do({{ for_args_set() }})
    # end def {{ function.func }}
